/**
 * Deep Thought Administration API
 * This is the Deep Thought Administration API. You can find out more about Deep Thought at [https://github.com/bizaio/deepthought](https://github.com/bizaio/deepthought) or on the [DataRight.io Slack, #oss](https://join.slack.com/t/datarightio/shared_invite/enQtNzAyNTI2MjA2MzU1LTU1NGE4MmQ2N2JiZWI2ODA5MTQ2N2Q0NTRmYmM0OWRlM2U5YzA3NzU5NDYyODlhNjRmNzU3ZDZmNTI0MDE3NjY).
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AddressPAFFlatUnitType } from './addressPAFFlatUnitType';
import { AddressPAFFloorLevelType } from './addressPAFFloorLevelType';
import { AddressPAFPostalDeliveryType } from './addressPAFPostalDeliveryType';
import { AddressPAFStateType } from './addressPAFStateType';
import { AddressPAFStreetSuffix } from './addressPAFStreetSuffix';
import { AddressPAFStreetType } from './addressPAFStreetType';
import { DioSchemeType } from './dioSchemeType';

/**
 * A Deep Thought AusPost Postal Address Format
 */
export interface DioAddressPAF { 
    /**
     * Deep Thought PAF Address Identifier
     */
    id: string;
    schemeType: DioSchemeType;
    /**
     * Unique identifier for an address as defined by Australia Post.  Also known as Delivery Point Identifier
     */
    dpid?: string;
    /**
     * Thoroughfare number for a property (first number in a property ranged address)
     */
    thoroughfareNumber1?: number;
    /**
     * Suffix for the thoroughfare number. Only relevant is thoroughfareNumber1 is populated
     */
    thoroughfareNumber1Suffix?: string;
    /**
     * Second thoroughfare number (only used if the property has a ranged address eg 23-25)
     */
    thoroughfareNumber2?: number;
    /**
     * Suffix for the second thoroughfare number. Only relevant is thoroughfareNumber2 is populated
     */
    thoroughfareNumber2Suffix?: string;
    flatUnitType?: AddressPAFFlatUnitType;
    /**
     * Unit number (including suffix, if applicable)
     */
    flatUnitNumber?: string;
    floorLevelType?: AddressPAFFloorLevelType;
    /**
     * Floor or level number (including alpha characters)
     */
    floorLevelNumber?: string;
    /**
     * Allotment number for the address
     */
    lotNumber?: string;
    /**
     * Building/Property name 1
     */
    buildingName1?: string;
    /**
     * Building/Property name 2
     */
    buildingName2?: string;
    /**
     * The name of the street
     */
    streetName?: string;
    streetType?: AddressPAFStreetType;
    streetSuffix?: AddressPAFStreetSuffix;
    postalDeliveryType?: AddressPAFPostalDeliveryType;
    /**
     * Postal delivery number if the address is a postal delivery type
     */
    postalDeliveryNumber?: number;
    /**
     * Postal delivery number prefix related to the postal delivery number
     */
    postalDeliveryNumberPrefix?: string;
    /**
     * Postal delivery number suffix related to the postal delivery number
     */
    postalDeliveryNumberSuffix?: string;
    /**
     * Full name of locality
     */
    localityName: string;
    /**
     * Postcode for the locality
     */
    postcode: string;
    state: AddressPAFStateType;
}